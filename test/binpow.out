@main
	op: const		dest: acc		type: int		value: 1	
	op: call 		dest: y 		type: int		args: ["x", "n", "acc"]		funcs: ["bin_pow"]
	op: print		args: ["y"]	
@is_even
	op: const		dest: two		type: int		value: 2	
	op: div  		dest: half		type: int		args: ["x", "two"]	
	op: mul  		dest: reconstruct		type: int		args: ["half", "two"]	
	op: eq   		dest: same		type: bool		args: ["x", "reconstruct"]	
	op: ret  		args: ["same"]	
@bin_pow
	op: const		dest: zero		type: int		value: 0	
	op: const		dest: one		type: int		value: 1	
	op: const		dest: two		type: int		value: 2	
	op: eq   		dest: cond0		type: bool		args: ["n", "zero"]	
	op: br   		args: ["cond0"]		labels: ["then.0", "else.0"]
.then.0
	op: ret  		args: ["acc"]	
.else.0
	op: call 		dest: is_even		type: bool		args: ["n"]		funcs: ["is_even"]
	op: br   		args: ["is_even"]		labels: ["then.1", "else.1"]
.then.1
	op: mul  		dest: x2		type: int		args: ["x", "x"]	
	op: div  		dest: n2		type: int		args: ["n", "two"]	
	op: call 		dest: val		type: int		args: ["x2", "n2", "acc"]		funcs: ["bin_pow"]
	op: ret  		args: ["val"]	
.else.1
	op: sub  		dest: n2		type: int		args: ["n", "one"]	
	op: mul  		dest: acc2		type: int		args: ["x", "acc"]	
	op: call 		dest: val		type: int		args: ["x", "n2", "acc2"]		funcs: ["bin_pow"]
	op: ret  		args: ["val"]	
